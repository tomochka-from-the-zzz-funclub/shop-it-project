version: '3.8'

services:
  sellers:
    platform: linux/amd64
    build:
      context: .
      dockerfile: sellers/Dockerfile
    env_file:
      - configs/docker.env
    ports:
      - '127.0.0.1:80:8082'
      - '127.0.0.1:9092:9092'
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stoppe
  goods:
    platform: linux/amd64
    build:
      context: .
      dockerfile: goods/Dockerfile
    env_file:
      - configs/docker.env
    ports:
      - '127.0.0.1:80:8082'
      - '127.0.0.1:9092:9092'
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stoppe

  buyers:
    platform: linux/amd64
    build:
      context: .
      dockerfile: buyers/Dockerfile
    env_file:
      - configs/buyersservice_docker.env
    ports:
      - '127.0.0.1:83:8083'
      - '127.0.0.1:9093:9093'
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  orders:
    build: 
      context: .
      dockerfile: orders/Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - config/docker.env

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: buyer_info
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  search-service:
    build:
      context: .
      dockerfile: serch/Dockerfile
    container_name: search-service
    ports:
      - "8081:8081"
    environment:
      - ELASTIC_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  esdata:
