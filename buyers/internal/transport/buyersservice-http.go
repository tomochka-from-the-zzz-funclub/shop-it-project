// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"buyers-service/internal/interfaces"
	"github.com/gofiber/fiber/v2"
)

type httpBuyersService struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverBuyersService
	base             interfaces.BuyersService
}

func NewBuyersService(svcBuyersService interfaces.BuyersService) (srv *httpBuyersService) {

	srv = &httpBuyersService{
		base: svcBuyersService,
		svc:  newServerBuyersService(svcBuyersService),
	}
	return
}

func (http *httpBuyersService) Service() *serverBuyersService {
	return http.svc
}

func (http *httpBuyersService) WithLog() *httpBuyersService {
	http.svc.WithLog()
	return http
}

func (http *httpBuyersService) WithMetrics() *httpBuyersService {
	http.svc.WithMetrics()
	return http
}

func (http *httpBuyersService) WithErrorHandler(handler ErrorHandler) *httpBuyersService {
	http.errorHandler = handler
	return http
}

func (http *httpBuyersService) SetRoutes(route *fiber.App) {
	route.Post("/api/v1/auth/register", http.serveRegister)
	route.Post("/api/v1/auth/login", http.serveLogin)
	route.Get("/api/v1/buyer", http.serveGetBuyer)
	route.Delete("/api/v1/buyer", http.serveDeleteUser)
}
